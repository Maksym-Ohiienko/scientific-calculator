#pragma once 

#include <Windows.h>		// Для функцій Windows 
#include <list>				// Для списку з бібліотеки шаблонів STL
#include <stack>			// Для стеку з бібліотеки шаблонів STL
#include <unordered_map>	// Для хеш-таблиці з бібліотеки шаблонів STL
#include <thread>			// Для відкриття додаткових потоків


////////////////////////////////////////
// Спільні для всіх файлів глобальні змінні
extern HINSTANCE hInst;	// Дескриптор програми
extern HWND hWnd;		// Дескриптор головного вікна
extern HWND hCalcDlg;	// Дескриптор діалогу калькулятор
extern HWND hSelDlg;	// Дескриптор діалогу обрати константу
////////////////////////////////////////
	

////////////////////////////////////////
// Віконні процедури програми
LRESULT CALLBACK MainWindowProc(HWND, UINT, WPARAM, LPARAM);		// Процедура головного вікна програми(точки входу)

INT_PTR CALLBACK SelectWindowProc(HWND, UINT, WPARAM, LPARAM),		// Процедура вибору константи для вводу
		CALLBACK CalculatorWindowProc(HWND, UINT, WPARAM, LPARAM),  // Процедура калькулятора(головне вікно)
		CALLBACK AboutWindowProc(HWND, UINT, WPARAM, LPARAM);		// Процедура вікна "про програму"
////////////////////////////////////////


////////////////////////////////////////
// Функції ініціалізації вікон та інтерфейсу
void initCalcWindow(),				// Функція ініціалізації головного вікна
	 loadDynamicLib(),				// Функція завантаження динамічної бібліотеки
	 upLoadDynamicLib(),			// Функція вивантаження динамічної бібліотеки
	 selChangeLogCombo(),			// Процедура обробки вибору логарифмічної функції
	 selChangeHistoryCombo(),		// Процедура обробки вибору минулого виразу
	 selChangeModeList(),			// Функція обробки вибору режиму введення чисел
	 changeSettingsMenuState(),		// Функція відображення меню налаштувань 	
	 setWindowIcon(HWND, LPCTSTR);	// Функція встановлення іконки для вікна
////////////////////////////////////////


////////////////////////////////////////
// Функції обробки файлу, що містить історію вводу
BOOL termIsAdded(const std::wstring&),	// Функція перевірки чи існує вираз у списку
	 writeFileHistory(),				// Функція запису у файл поточного виразу
	 readFileHistory();					// Функція читання з файлу історії вводу

void histFileProc(),	 // Функція обробки файлу
     clearFileHistory(); // Функція очищення історії вводу
////////////////////////////////////////


////////////////////////////////////////
// Функції обробки головного виразу
std::vector<std::wstring> createStrTokens(std::wstring);		// Функція розбиття введеного тексту на токени
double strTokensProc(std::vector<std::wstring>);				// Функція обробки токенів тексту
std::wstring fillConstRegEx();									// Функція заповнення набору констант
std::wstring selectedConst();									// Функція що повертає обрану константу
bool comparePriority(const std::wstring&, const std::wstring&); // Функція порівняння пріоритетів операцій
int getPriority(const std::wstring&);							// Функція отримання пріоритету для операції
void btnClicked(int);											// Функція обробки натиснення основних клафіш інтерфейсу
void btn16Clicked(int);											// Функція обробки натиснення додаткових клафіш інтерфейсу
void calcOperator(std::stack<double>&, const std::wstring&);	// Функція обробки операторів
void showErr(const std::wstring&);								// Функція для відображення помилки
////////////////////////////////////////


////////////////////////////////////////
// Функції гетери для обробки глобальних змінних
std::wstring getLastNum();		// Отримати останнє введене число
////////////////////////////////////////


////////////////////////////////////////
// Функції обробки зміни форматів
double xToDecimal(std::wstring); // Функція конвертування у 10тичний формат
std::wstring decimalToX(int);	 // Функція конвертування від 10тичного формату
////////////////////////////////////////
